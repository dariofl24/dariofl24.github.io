
/**
* Export Orders to CSV
*
* @input ExportFile : String The export file name
* @input OrdersToExport : dw.util.Iterator The orders to export
* @input FirstCycle : Boolean
*
* @output ErrorMsg : String The error message if any
*/

importPackage(dw.io);
importPackage(dw.order);
importPackage(dw.campaign);
importPackage(dw.system);
importPackage(dw.util);

importScript("converse_core:constants.ds");
importScript("converse_core:promotion/PromotionHelper.ds");
importScript("converse_core:promotion/PromotionCodeResolver.ds");
importScript("converse_core:util/ViewHelpers.ds");
importScript("custom/CsvFileWriter.ds");
importScript("custom/OrderDataReaderEMEA.ds");
importScript("custom/OrderDataReaderUS.ds");

var logger : Logger = Logger.getLogger('ExportOrders');
var CsvFileWriter = converse.utils.CsvFileWriter;

function execute(args : PipelineDictionary) : Number
{
    let errorMsg : String = null;
    
    try {
        writeOrdersToCsvFile(args.ExportFile, args.OrdersToExport, args.FirstCycle);
    } catch(e) {
        errorMsg = e.toString();
        logger.error(errorMsg);
    }
    
    args.ErrorMsg = errorMsg;

    return empty(errorMsg) ? PIPELET_NEXT : PIPELET_ERROR;
}

function writeOrdersToCsvFile(csvFileName : String, orders : Iterator, firstCycle : Boolean) {
    let promotionHelper = new converse.promotion.PromotionHelper(PromotionMgr);
    let promotionCodeResolver = new converse.promotion.PromotionCodeResolver(promotionHelper);
    let orderDataReader;
    if (isSite('US')) {
        orderDataReader = new converse.utils.OrderDataReaderUS(promotionCodeResolver);
    } else {
        orderDataReader = new converse.utils.OrderDataReaderEMEA(promotionCodeResolver);
    }
    
    let csvWriter : CsvFileWriter =  new CsvFileWriter(csvFileName, !firstCycle);
    
    if( firstCycle ) {
	    let header = getCsvHeader();
	    csvWriter.writeNext(header);
    }
    
    while(orders.hasNext()) {
        let order = orders.next();
        csvWriter.writeAll(orderDataReader.read(order));
    }

    csvWriter.close();
}

function getCsvHeader() {
    if (isSite('US')) {
        return getCsvHeaderUS();
    } else {
        return getCsvHeaderEMEA();
    }
}

function getCsvHeaderUS() : Array {
    return ["JourneysOrderID",
            "OrderID1",
            "Bill to City",
            "Bill to State",
            "Bill to Zip",
            "Ship to City",
            "Ship to State",
            "Ship to Zip",
            "Email Address",
            "OrderDate",
            "Style Number",
            "Style Name",
            "Color",
            "ShoeSize",
            "Cut",
            "Quantity",
            "Product List Price",
            "Product Cost",
            "Shipping Cost",
            "Promotion Code",
            "MetricId",
            "Pillar",
            "Category",
            "Sub Category",
            "UPC",
            "Source",
            "Product Gender",
            "Customer Number",
            "Ship Date",
            "Coupon Code",
            "Coupon ID"];
}

function getCsvHeaderEMEA() : Array {
    return ["OrderID",
            "Bill to City",
            "Bill to Postal",
            "Bill to Country",
            "Ship to City",
            "Ship to Postal",
            "Ship to Country",
            "Email Address",
            "OrderDate",
            "Style Number",
            "Style Name",
            "Color",
            "ShoeSize",
            "Cut",
            "Quantity",
            "Product List Price",
            "Product Cost",
            "Product VAT",
            "Shipping Cost",
            "Promotion Code",
            "MetricId",
            "Pillar",
            "Category",
            "Sub Category",
            "UPC",
            "Source",
            "Product Gender",
            "Customer Number",
            "Ship Date",
            "Coupon Code",
            "Coupon ID",
            "Device Type"];
}