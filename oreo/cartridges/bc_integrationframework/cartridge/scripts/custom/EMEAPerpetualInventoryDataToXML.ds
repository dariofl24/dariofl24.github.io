/**
* Read dyo products from DB and create XML
*
* @input InventoryXMLFileName : String Inventory XML File Name
*
* @output ErrorMsg : String The error message if any
*/
importPackage(dw.io);
importPackage(dw.order);
importPackage(dw.system);
importPackage(dw.util);
importPackage(dw.catalog);

let logger: Logger = Logger.getLogger('PerpetualDYOInventory');


function execute(args: PipelineDictionary): Number {
    let inventoryXMLFile: String = args.InventoryXMLFileName;

    logger.info("inventoryXMLFile is ---" + inventoryXMLFile);

    let errorMsg: String = null;
    try {
        //process and convert to XML
        processAndConvertToXML(inventoryXMLFile);
    } catch (e) {
        errorMsg = e.toString();
        logger.error(errorMsg);
    }

    args.ErrorMsg = errorMsg;

    return empty(errorMsg) ? PIPELET_NEXT : PIPELET_ERROR;
}


function processAndConvertToXML(inventoryXMLFile) {
	
    var initWriter = function (file) {
        let out : XMLIndentingStreamWriter = new XMLIndentingStreamWriter(new FileWriter(file, "UTF-8"));
        out.writeStartDocument();
        out.writeStartElement("inventory");
        out.writeDefaultNamespace("http://www.demandware.com/xml/impex/inventory/2007-05-31");
        return out;
    }

    var finalizeWriter = function (out : XMLIndentingStreamWriter) {
        try {
            out.writeEndElement();
            out.writeEndDocument();
        } finally {
            if (null != out) {
                out.flush();
                out.close();
            }
        }
    }

    var file = new File(inventoryXMLFile);
	var out = initWriter(file);
	
	logger.info("begin processing and XML conversion");
	//get master catalog
	var siteCatalog = CatalogMgr.getCatalog("ConverseDe");
	logger.info("masterCatalog is ---" + siteCatalog.displayName);
	//get products 
    var productsItr: SeekableIterator = ProductMgr.queryProductsInCatalog(siteCatalog);
	logger.info("productsItr is ---" + productsItr.count);

	var customProductList : ArrayList = new ArrayList();

	while (productsItr.hasNext()) {
        var product: Product = productsItr.next();
        if (empty(product.custom.productType)) {
            logger.error("empty productType:" + product.ID);
            continue;
        }
		if (product.custom.productType == "dyo") {
			customProductList.add(product.ID);
		}
	}

	logger.info("customProductList size is ---" + customProductList.size() );


    out.writeStartElement("inventory-list");
	    out.writeStartElement("header");
	    out.writeAttribute("list-id", "inventory_Converse_EMEA");
		    out.writeStartElement("default-instock");
		    out.writeCharacters("false");
		    out.writeEndElement();
		    out.writeStartElement("description");
		    out.writeCharacters("Product Sku inventory");
		    out.writeEndElement();
		    out.writeStartElement("use-bundle-inventory-only");
		    out.writeCharacters("false");
		    out.writeEndElement();
		out.writeEndElement();
	
	
	    out.writeStartElement("records");
	    //process dyo items
	    for (var j: Number = 0; j < customProductList.size(); j++) {    	
	    		out.writeStartElement("record");
	            out.writeAttribute("product-id", customProductList.get(j));
	            out.writeStartElement("allocation");
	            out.writeCharacters("0");
	            out.writeEndElement();
	            out.writeStartElement("perpetual");
	            out.writeCharacters("true");
	            out.writeEndElement();
	            out.writeEndElement();
	    }
	    //end records element
	    out.writeEndElement();

	//end inventory-list element
    out.writeEndElement();
    
    finalizeWriter(out);;
    
    logger.info("---XML Generation Finished ---");
	
}

