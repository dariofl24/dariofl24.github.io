/**
* Report Products that are online and have no inventory
*
* @input ExportFile : String The export file name
*
* @output ErrorMsg : String The error message if any
*/

importPackage(dw.io);
importPackage(dw.order);
importPackage(dw.system);
importPackage(dw.util);
importPackage(dw.catalog);

importScript("converse_core:constants.ds");
importScript("converse_core:product/ProductUtils.ds");
importScript("custom/ProductsExporter.ds");

var logger = Logger.getLogger('ReportProductsOnlineWithoutInventory');
var ProductsExporter = converse.utils.ProductsExporter;

function execute(args : PipelineDictionary) : Number
{
    let errorMsg : String = null;
    
    try {
        let products = ProductMgr.queryAllSiteProducts();
        let exporter = new ProductsExporter(args.ExportFile, getCsvHeader, getCsvRow, shouldExport);
        
        exporter.export(products);
    } catch(e) {
        errorMsg = e.toString();
        logger.error(errorMsg);
    }
    
    args.ErrorMsg = errorMsg;

    return empty(errorMsg) ? PIPELET_NEXT : PIPELET_ERROR;
}

function getCsvHeader() {
    return ["ID", "SKU", "SIZE", "UPC"];
}

function getCsvRow(product) {
    return [product.ID, product.manufacturerSKU, product.custom.size, product.UPC];
}

function shouldExport(product) {
    let availability = ProductUtils.getAvailability(product, 1);

    return product.variant && product.online && availability.hasUnavailable;
}
