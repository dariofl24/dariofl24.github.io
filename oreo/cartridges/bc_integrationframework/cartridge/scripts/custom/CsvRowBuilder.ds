importPackage(dw.io);
importPackage(dw.system);
importPackage(dw.util);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libInheritance.ds");
importScript("converse_core:common/libNamespace.ds");

(function() {

    var CsvRowBuilder = Class.extend({
        separator : converse.constants.SelectorType.Comma,
        init : function(separator) {
            if( separator ) {
                this.separator = separator;
            }
            this.quote = "\"";
            this.newLine = "\n";

            this.quoteReplacement = this.quote + this.quote;
        },

        getRow : function(line, shouldAdjust) : String {
            shouldAdjust = (typeof shouldAdjust === "undefined") ? true : shouldAdjust;
            let result = [];

            for each (let token in line) {
                if(shouldAdjust) {
                    token = this.adjustToken(token);
                }
                result.push(token);
            };

            let resultString = result.join(this.separator);

            return resultString + this.newLine;
        },

        adjustToken : function(token : String) : String {
            if (empty(token)) {
                return "";
            };

            let quotedToken = String(token).replace(this.quote, this.quoteReplacement);

            return this.quote + quotedToken + this.quote;
        }
    });

    var ns = Namespace.extendFromString(converse, "utils");
    Namespace.extend(ns, { CsvRowBuilder : CsvRowBuilder });
})();