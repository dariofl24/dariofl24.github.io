importPackage(dw.io);
importPackage(dw.system);
importPackage(dw.campaign);
importPackage(dw.order)
importPackage(dw.util);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libInheritance.ds");
importScript("converse_core:common/libNamespace.ds");
importScript("converse_core:product/ProductUtils.ds");
importScript("custom/OrderDataReader.ds");

(function() {

    let OrderDataReaderEMEA = converse.utils.OrderDataReader.extend({
        
        read: function(order : Order) : ArrayList {
            let orderLineItemsData : ArrayList = new ArrayList();
            let promoCodes = this.promotionCodeResolver.getPromoCodes(order);
            let couponCode = "";
            let couponID = "";

            if (!order.couponLineItems.empty) {
                let clis : Iterator = order.getCouponLineItems().iterator();
                
                while (clis.hasNext()) {
                    let cli : CouponLineItem = clis.next();
                    couponCode = cli.couponCode;
                    let coupon = CouponMgr.getCouponByCode(couponCode);

                    if (coupon != null) {
                        couponID = coupon.ID;
                    }
                }
            }
            
            for each(let shipment in order.getShipments()) {
                for each (let item in shipment.getProductLineItems()) {
                    if (empty(item.product)) {
                        continue;
                    }
                    
                    let row : ArrayList = new ArrayList();
                    
                    //0 OrderID
                    row.push(order.orderNo);
                    
                    //1 Bill to City
                    row.push(order.billingAddress.city);
                    //2 Bill to Postal
                    row.push(order.billingAddress.postalCode);
                    //3 Bill to Country
                    row.push(order.billingAddress.countryCode);
                    //4 Ship to City
                    row.push(shipment.shippingAddress.city);
                    //5 Ship to Postal
                    row.push(shipment.shippingAddress.postalCode);
                    //6 Ship to Country
                    row.push(shipment.shippingAddress.countryCode);
                    
                    //7 Email Address
                    row.push(order.customerEmail);

                    let calendar = new Calendar(order.creationDate);
                    calendar.setTimeZone(System.getInstanceTimeZone());
                    //8 OrderDate
                    row.push(StringUtils.formatCalendar(calendar, 'MM/dd/yyyy HH:mm:ss'));
                    
                    //9 Style Number
                    row.push(item.product.custom.GenescoSKU || item.product.custom.sku || item.product.manufacturerSKU);
                    //10 Style Name
                    row.push(item.product.name);
                    //11 Color
                    row.push(item.product.custom.color);
                    //12 ShoeSize
                    row.push(item.product.custom.size);
                    //13 Cut
                    row.push(item.product.custom.cut.displayValue);
                    //14 Quantity
                    row.push(item.quantityValue);
                    //15 Product List Price
                    row.push(item.basePrice.value);
                    //16 Product Cost
                    row.push(item.adjustedPrice.divide(item.quantityValue));
                    //17 Product VAT
                    row.push(item.getTaxRate());
                    //18 Shipping Cost
                    row.push(shipment.adjustedShippingTotalPrice.value);
                    //19 Promotion Code
                    row.push(promoCodes[shipment.custom.productType]);
                    //20 MetricId
                    row.push(item.custom.metricID);
                    //21 Pillar
                    row.push(item.product.custom.pillar.displayValue);
                    //22 Category
                    row.push(item.product.custom.merchPlannerCategory);
                    //23 Sub Category
                    row.push('');
                    //24 UPC
                    row.push(item.product.UPC);
                    //25 Source
                    row.push('');
                    //26 Product Gender
                    row.push(item.product.custom.gender.displayValue);
                    //27 Customer Number
                    row.push(order.customerNo);
                    //28 Ship Date
                    row.push(this.getShipDate(item));
                    //29 Coupon Code
                    row.push(couponCode);
                    //30 Coupon ID
                    row.push(couponID);
                    //31 Device
                    row.push(order.custom.createdByDevice);
                    
                    orderLineItemsData.push(row);
                }
            }
            
            return orderLineItemsData;
        }
    });

    var ns = Namespace.extendFromString(converse, "utils");
    Namespace.extend(ns, { OrderDataReaderEMEA : OrderDataReaderEMEA });
})();