importPackage( dw.system );

importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");
importScript("int_pickuppoint:objects/PickupPointSearchResult.ds");

var PickupPointSearchResult = integration.pickuppoint.objects.PickupPointSearchResult;
var PickupPoint = integration.pickuppoint.objects.PickupPoint;
var Location = integration.pickuppoint.objects.Location;
var Address = integration.pickuppoint.objects.Address;
var BusinessDay = integration.pickuppoint.objects.BusinessDay;
var BusinessHour = integration.pickuppoint.objects.BusinessHour;

(function() {
    var parseLocation = function(responseLocation : Object) : Location {
        var location : Location = new Location();
        location.setLatitude(responseLocation.getLatitude());
        location.setLongitude(responseLocation.getLongitude());
        location.setDistance(responseLocation.getDistance());
        return location;
    };
    
    var parseAddress = function(pickupPointAddress : Object) : Address {
        var address : Address = new Address();
        address.setStreet(pickupPointAddress.getStreet() + " " + pickupPointAddress.getHouseNr()); //TODO: the service returns much more information, should we concat everything?
        address.setPostalCode(pickupPointAddress.getZipcode());
        address.setCity(pickupPointAddress.getCity());
        return address;
    };
    
    var addBusinessDays = function(pickupPoint : PickupPoint, businessDays) {
        addBusinessDay(pickupPoint, "Mon", businessDays.getMonday());
        addBusinessDay(pickupPoint, "Tue", businessDays.getTuesday());
        addBusinessDay(pickupPoint, "Wed", businessDays.getWednesday());
        addBusinessDay(pickupPoint, "Thu", businessDays.getThursday());
        addBusinessDay(pickupPoint, "Fri", businessDays.getFriday());
        addBusinessDay(pickupPoint, "Sat", businessDays.getSaturday());
        addBusinessDay(pickupPoint, "Sun", businessDays.getSunday());
    };
    
    var addBusinessDay = function(pickupPoint : PickupPoint, dayOfWeek : String, businessHours) {
        if (empty(businessHours) || empty(businessHours.getString())) {
            return;
        }
        
        pickupPoint.addBusinessDay(parseBusinessDay(dayOfWeek, businessHours));
    };
    
    var parseBusinessDay = function(dayOfWeek : String, businessHours) : BusinessDay {
        var businessDay : BusinessDay = new BusinessDay();
        businessDay.setDayOfWeek(dayOfWeek);
        
        for each (let businessHour : String in businessHours.getString()) {
            var fromTill : Array = businessHour.split("-");
            var businessHour : BusinessHour = new BusinessHour();
            businessHour.setOpenFrom(fromTill[0]);
            businessHour.setOpenTill(fromTill[1]);
            
            businessDay.addBusinessHour(businessHour);
        }
        
        return businessDay;
    };

    var parsePickupPoint = function(responseLocation : Object) : PickupPoint {
        var pickupPoint : PickupPoint = new PickupPoint();
        pickupPoint.setId(responseLocation.getLocationCode());
        pickupPoint.setName(responseLocation.getName());
        pickupPoint.setLocation(parseLocation(responseLocation));
        pickupPoint.setAddress(parseAddress(responseLocation.getAddress()));
        pickupPoint.setCarrier("PostNL");
        addBusinessDays(pickupPoint, responseLocation.getOpeningHours());
        
        return pickupPoint;
    };
    
    var SearchResultConverter = {
        from : function(response : Object) : PickupPointSearchResult {
            var searchResult : PickupPointSearchResult = new PickupPointSearchResult();
            searchResult.setSuccess(true);
            
            for each (let pickupPoint in response.getGetLocationsResult().getResponseLocation()) {
                searchResult.addPickupPoint(parsePickupPoint(pickupPoint));
            }
            
            return searchResult;
        }
    };
    
    var NS = Namespace.extendFromString(integration, "pickuppoint");
    Namespace.extend(NS, {
        SearchResultConverter: SearchResultConverter
    });
})();