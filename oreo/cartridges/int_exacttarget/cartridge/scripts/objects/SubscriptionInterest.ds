importPackage(dw.system);
importPackage(dw.value);
importPackage(dw.util);

importPackage(dw.order);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libInheritance.ds");
importScript("converse_core:common/libNamespace.ds");

(function(){

    var _deps = {
       CustomObjectMgr: dw.object.CustomObjectMgr
    };

    var SubscriptionInterest = Class.extend({
    });

    SubscriptionInterest._deps = _deps;
    
    SubscriptionInterest.createByInterestType = function(type: String, selected: Boolean) : Object {
        var subscriptionInterestCustomObj: Object = getSubscriptionInterestByType(type);
        var subscriptionInterest: Object = SubscriptionInterest.createFromCustomObject(subscriptionInterestCustomObj);
        subscriptionInterest.selected = selected;

        return subscriptionInterest;
    }

    SubscriptionInterest.createFromCustomObject = function(subscriptionInterestCustomObj: Object) : Object {
    	var subscriptionInterest: Object = new SubscriptionInterest();
    	subscriptionInterest.selected = false;
        subscriptionInterest.id = subscriptionInterestCustomObj.custom.ID;
        subscriptionInterest.type = subscriptionInterestCustomObj.custom.type;
        subscriptionInterest.active = subscriptionInterestCustomObj.custom.active;
        subscriptionInterest.displayName = subscriptionInterestCustomObj.custom.displayName;
        subscriptionInterest.description = subscriptionInterestCustomObj.custom.description;
        
        return subscriptionInterest;
    }

    SubscriptionInterest.fetchAllInterests = function(): Array {
        var interests = [];
        var allInterests: SeekableIterator = _deps.CustomObjectMgr.getAllCustomObjects("SubscriptionInterest");
        
        while(allInterests.hasNext()) {
            let subscriptionInterest: Object = SubscriptionInterest.createFromCustomObject(allInterests.next());

            if (subscriptionInterest.active) {
                interests.push(subscriptionInterest);
            }
        }
        
        return interests.sort(function(first, second) { return first.id - second.id });
    }
    
    function getSubscriptionInterestByType(type: String) : Object {
        return _deps.CustomObjectMgr.queryCustomObject("SubscriptionInterest", "custom.type={0}", type);
    }

    var ns = Namespace.extendFromString(integration, "exacttarget.objects");
    Namespace.extend(ns, { SubscriptionInterest: SubscriptionInterest });

})();
