importPackage(dw.system);
importPackage(dw.util);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");

importScript("int_exacttarget:command/AbstractUpdateRequest.ds");
importScript("int_exacttarget:objects/SubscriberBuilder.ds");
importScript("int_exacttarget:objects/UpdateResponse.ds");

(function() {

    var ET_NS = integration.exacttarget;
    var COMMAND_NS = ET_NS.command;
    var OBJ_NS = ET_NS.objects;

    var AbstractUpdateRequest = COMMAND_NS.AbstractUpdateRequest;
    var SubscriberBuilder = OBJ_NS.SubscriberBuilder;
    var UpdateResponse = OBJ_NS.UpdateResponse;

    var UnsubscribeRequest = AbstractUpdateRequest.extend({

        init: function(email : String) {
            this._super();
            this.email = email;
        },

        createUpdateOptions: function() : Object {
            return new this.webReference.UpdateOptions();
        },

        createApiObjects: function() : Array {
            var subscriber = createUnsubscribeRequest.call(this);
            return [ subscriber ];
        },
        
        handleResponse: function(response) {
            this.logErrorIfAvailable(response);
            this.response = new UpdateResponse(response);
        }
    });

    Namespace.extend(COMMAND_NS, { UnsubscribeRequest: UnsubscribeRequest });

    function createUnsubscribeRequest() : Object {
        var builder = new SubscriberBuilder(this.webReference);
        var status: Object = this.webReference.SubscriberStatus.Unsubscribed;
        var listIds: Array = [ this.configuration.listId ];

        return builder
            .setEmail(this.email)
            .createSubscribeList(status, listIds)
            .build();
    }

})();
