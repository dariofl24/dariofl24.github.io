importPackage(dw.svc);
importPackage(dw.net);
importPackage(dw.io);
importPackage(dw.ws);
importPackage(dw.system);
importPackage(dw.util);

importScript("converse_core:constants.ds");

function getErrorResponseWrapper(responseObject, responseWrapper) {
    
};

function setSecurity(svc:SOAPService) {
    
    var secrets: Map = new HashMap();
    var username = svc.getConfiguration().getCredential().getUser();
    var password = svc.getConfiguration().getCredential().getPassword();
    secrets.put(username,password);

    var requestCfg: Map = new HashMap();
    requestCfg.put(WSUtil.WS_ACTION, WSUtil.WS_USERNAME_TOKEN+" "+WSUtil.WS_TIMESTAMP);
    requestCfg.put(WSUtil.WS_USER, username);
    requestCfg.put(WSUtil.WS_PASSWORD_TYPE, WSUtil.WS_PW_TEXT);
    requestCfg.put(WSUtil.WS_SECRETS_MAP, secrets);

    var responseCfg: Map = new HashMap();
    responseCfg.put(WSUtil.WS_ACTION, WSUtil.WS_TIMESTAMP);
    responseCfg.put(WSUtil.WS_SECRETS_MAP, secrets);
    
    WSUtil.setWSSecurityConfig(svc.serviceClient, requestCfg, responseCfg);
}


function getMockResponseError(errorDetail) {
    var responseMockObject = new webreferences2.TransactionPaymentService.org.datacontract.schemas._2004._07.pmg_externalapi_v2_model.ServiceResponse();
    responseMockObject.setSuccess(false);

    var error = new webreferences2.TransactionPaymentService.org.datacontract.schemas._2004._07.pmg_externalapi_v2_model_errors.ErrorAuthorisation();
    error.setMessage(errorDetail);

    responseMockObject.setError(error);

    return responseMockObject;
}
