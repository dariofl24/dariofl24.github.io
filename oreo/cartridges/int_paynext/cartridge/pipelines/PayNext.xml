<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="GetSecurityToken">
    <segment>
      <node>
        <start-node call-mode="private" name="GetSecurityToken" secure="true"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="scripts/GetSecurityToken.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="SecurityToken" key="SecurityToken"/>
          <key-binding alias="result" key="result"/>
          <key-binding alias="RSAPublicKey" key="RSAPublicKey"/>
          <key-binding alias="errorDetails" key="errorDetails"/>
          <key-binding alias="errorMessage" key="errorMessage"/>
          <key-binding alias="isGetSecurityTokenTest" key="isSecurityTokenTest"/>
          <key-binding alias="isGetSecurityTokenTest" key="isGetSecurityTokenTest"/>
          <key-binding alias="PaynextVerificationStatus" key="PaynextVerificationStatus"/>
          <key-binding alias="PaymentVerificationStatus" key="PaymentVerificationStatus"/>
          <key-binding alias="SecurityTokenVerificationStatus" key="SecurityTokenVerificationStatus"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="success"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="SavePayment">
    <segment>
      <node>
        <start-node call-mode="private" name="SavePayment" secure="true"/>
        <node-display x="2" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="PayNext-GetSecurityToken"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="2"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="success">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="scripts/SavePayment.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="RSAPublicKey" key="RSAPublicKey"/>
                <key-binding alias="PaymentVerificationStatus.securityToken" key="SecurityToken"/>
                <key-binding alias="errorDetails" key="errorDetails"/>
                <key-binding alias="errorMessage" key="errorMessage"/>
                <key-binding alias="result" key="result"/>
                <key-binding alias="isSavePaymentTest" key="isSavePaymentTest"/>
                <key-binding alias="PaymentToken" key="PaymentToken"/>
                <key-binding alias="isGetSecurityTokenTest" key="isGetSecurityTokenTest"/>
                <key-binding alias="PaymentMethodId" key="PaymentMethodId"/>
                <key-binding alias="CurrentForms.billing.paymentMethods.creditCard" key="CreditCardForm"/>
                <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields.common.firstName.value" key="FirstNameSingleShipping"/>
                <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields.common.lastName.value" key="LastNameSingleShipping"/>
                <key-binding alias="Basket" key="Basket"/>
                <key-binding alias="PaynextVerificationStatus" key="PaynextVerificationStatus"/>
                <key-binding alias="PaymentVerificationStatus" key="PaymentVerificationStatus"/>
                <key-binding alias="SecurityTokenVerificationStatus" key="SecurityTokenVerificationStatus"/>
                <key-binding alias="paymentVerificationStatus" key="SavePaymentVerificationStatus"/>
                <key-binding alias="Basket.paymentInstruments[0]" key="PaymentInstrument"/>
                <key-binding alias="CurrentForms.billing.paymentMethods.regionalpaymentfields" key="RegionalPaymentsForm"/>
              </pipelet-node>
              <node-display x="0" y="2"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in2" target-path="../b2.1"/>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="success"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="GetPaymentInfo">
    <segment>
      <node>
        <start-node call-mode="private" name="GetPaymentInfo" secure="true"/>
        <node-display x="5" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="scripts/GetPaymentInfo.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="PaymentToken" key="paymentToken"/>
          <key-binding alias="errorDetails" key="errorDetails"/>
          <key-binding alias="errorMessage" key="errorMessage"/>
          <key-binding alias="result" key="result"/>
          <key-binding alias="isGetPaymentInfoTest" key="isGetPaymentInfoTest"/>
          <key-binding alias="PaymentVerificationStatus.paymentToken" key="PaymentToken"/>
          <key-binding alias="PaymentMethod" key="PaymentMethod"/>
          <key-binding alias="PaynextVerificationStatus" key="PaynextVerificationStatus"/>
          <key-binding alias="PaymentVerificationStatus" key="PaymentVerificationStatus"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="success"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Authorize">
    <segment>
      <node>
        <start-node call-mode="private" name="Authorize" secure="true"/>
        <node-display x="7" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="scripts/Authorize.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="isAuthorizeTest" key="isAuthorizeTest"/>
          <key-binding alias="PaymentToken" key="PaymentToke"/>
          <key-binding alias="PaymentVerificationStatus.paymentToken" key="PaymentToken"/>
          <key-binding alias="AuthorizationDone" key="AuthorizationDone"/>
          <key-binding alias="errorDetails" key="errorDetails"/>
          <key-binding alias="errorMessage" key="errorMessage"/>
          <key-binding alias="result" key="result"/>
          <key-binding alias="TransactionToken" key="TransactionToken"/>
          <key-binding alias="isSavePaymentTest" key="isSavePaymentTest"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="CountryCode" key="CountryCode"/>
          <key-binding alias="ShopActionRequired" key="ShopActionRequired"/>
          <key-binding alias="ShopActionUrl" key="ShopActionUrl"/>
          <key-binding alias="CurrentSession" key="CurrentSession"/>
          <key-binding alias="PaymentVerificationStatus" key="PaynextVerificationStatus"/>
          <key-binding alias="paymentVerificationStatus" key="PaymentVerificationStatus"/>
          <key-binding alias="SavePaymentVerificationStatus" key="SavePaymentVerificationStatus"/>
          <key-binding alias="CurrentRequest.httpRemoteAddress" key="IpAddress"/>
          <key-binding alias="PaymentMethodId" key="PaymentMethodId"/>
          <key-binding alias="Order" key="Order"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="success"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetTransactionInfo">
    <segment>
      <node>
        <start-node call-mode="private" name="GetTransactionInfo" secure="true"/>
        <node-display x="9" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetOrder" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentHttpParameterMap.externalRef.stringValue" key="OrderNo"/>
          <key-binding alias="Order" key="Order"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="scripts/GetTransactionInfo.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="PaymentToken" key="paymentToken"/>
          <key-binding alias="errorDetails" key="errorDetails"/>
          <key-binding alias="errorMessage" key="errorMessage"/>
          <key-binding alias="result" key="result"/>
          <key-binding alias="isGetPaymentInfoTest" key="isGetPaymentInfoTest"/>
          <key-binding alias="TransactionToken" key="PaymentToken"/>
          <key-binding alias="Order.getPaymentInstruments()[0].getPaymentTransaction().getTransactionID()" key="TransactionToken"/>
          <key-binding alias="AuthorizationDone" key="AuthorizationDone"/>
          <key-binding alias="AuthorizationStatus" key="AuthorizationStatus"/>
          <key-binding alias="PaynextVerificationStatus" key="PaynextVerificationStatus"/>
          <key-binding alias="paymentVerificationStatus" key="PaymentVerificationStatus"/>
          <key-binding alias="Order.getPaymentInstruments()[0]" key="PaymentInstrument"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="authorized"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Validate">
    <segment>
      <node>
        <start-node call-mode="public" name="Validate" secure="true"/>
        <node-display x="1" y="7"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="PayNext-GetTransactionInfo"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="FailOrder" pipelet-set-identifier="bc_api">
                <key-binding alias="Order" key="Order"/>
              </pipelet-node>
              <node-display x="2" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <end-node name="error"/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="false" key="From_0"/>
                <key-binding alias="CurrentForms.billing.fulfilled.value" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <jump-node start-name-ref="COBilling-Start"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="authorized">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="true" key="From_0"/>
                <key-binding alias="CurrentForms.billing.fulfilled.value" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="-1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="COPlaceOrder-PostRedirectPaymentProcess"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <jump-node start-name-ref="COSummary-ShowConfirmation"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="GetSecurityTokenTest">
    <segment>
      <node>
        <start-node call-mode="public" name="GetSecurityTokenTest" secure="true"/>
        <node-display x="5" y="7"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="PayNext-GetSecurityToken"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="result"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="SavePaymentTest">
    <segment>
      <node>
        <start-node call-mode="public" name="SavePaymentTest" secure="true"/>
        <node-display x="6" y="7"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="&quot;CREDIT_CARD&quot;" key="From_0"/>
          <key-binding alias="PaymentMethodId" key="To_0"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="PayNext-SavePayment"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="result"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="AuthorizeTest">
    <segment>
      <node>
        <start-node name="AuthorizeTest" secure="true"/>
        <node-display x="8" y="7"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="&quot;any_valid_token&quot;" key="From_0"/>
          <key-binding alias="PaymentToken" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="PayNext-Authorize"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="result"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetPaymentInfoTest">
    <segment>
      <node>
        <start-node name="GetPaymentInfoTest" secure="true"/>
        <node-display x="10" y="7"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="&quot;cc_valid_token&quot;" key="From_0"/>
          <key-binding alias="PaymentToken" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="PayNext-GetPaymentInfo"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="result"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetTransactionInfoTest">
    <segment>
      <node>
        <start-node name="GetTransactionInfoTest" secure="true"/>
        <node-display x="12" y="7"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="&quot;any_valid_token&quot;" key="From_0"/>
          <key-binding alias="TransactionToken" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="PayNext-GetTransactionInfo"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="result"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
