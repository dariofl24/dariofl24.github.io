importPackage(dw.system);
importPackage(dw.svc);
importPackage(dw.net);
importPackage(dw.util);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");
importScript("pickuppoint/UPSLocatorJSONSearchResultConverter.ds");
importScript("int_pickuppoint:objects/PickupPointSearchResult.ds");

var logger = Logger.getLogger("KialaServiceInit");

var PickupPointSearchResult = integration.pickuppoint.objects.PickupPointSearchResult;
var UPSLocatorJSONSearchResultConverter = integration.pickuppoint.UPSLocatorJSONSearchResultConverter;

ServiceRegistry.configure("KialaService.kplist", {
	
    createRequest: function(svc : HTTPService, params) : Object {
        svc.setRequestMethod("POST");
        
        var UPSAccessLicenseNumber : String = dw.system.Site.getCurrent().getCustomPreferenceValue('UPSAccessPoint.AccessLicenseNumber');
        var UPSUserId : String = dw.system.Site.getCurrent().getCustomPreferenceValue('UPSAccessPoint.UserId');
        var UPSPassword : String = dw.system.Site.getCurrent().getCustomPreferenceValue('UPSAccessPoint.Password');
        
    	return JSON.stringify({'AccessRequest': {'AccessLicenseNumber': UPSAccessLicenseNumber,'UserId': UPSUserId,'Password': UPSPassword},
    		'LocatorRequest': {'SortCriteria':{'SortType': '01'},'Request': {'RequestAction': 'Locator','RequestOption': '64','TransactionReference': {'CustomerContext': 'XOLT Sample Code'}},
    			'OriginAddress': {'AddressKeyFormat': {'PostcodePrimaryLow': params.postCode,'CountryCode': 'FR'}},'Translate': {'Locale': 'en_FR'},
    			'UnitOfMeasurement': {'Code': 'KM'},'LocationSearchCriteria': {'SearchOption': {'OptionType': {'Code': '01'},'OptionCode': {'Code': '011'}},
    				'MaximumListSize': '10','SearchRadius': '50'},'AccessPointSearch':{'IncludeCriteria':{'ServiceOfferingList':{'ServiceOffering':{'Code': '001'}}}}}});
        
    },

    parseResponse: function(service : HTTPService, serviceClient : HTTPClient) {
        var statusCode : String = serviceClient.statusCode;
        
        if (statusCode != 200) {
            logger.error(StringUtils.format("An HTTP error occurred with status \"{0} - {1}\": {2}",
                serviceClient.statusMessage, serviceClient.statusCode, serviceClient.errorText));
            
            return new PickupPointSearchResult(false, "Unable to fetch pickup points.");
        }
        return UPSLocatorJSONSearchResultConverter.from(serviceClient.getText());
    }
});