importPackage( dw.system );

importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");
importScript("int_pickuppoint:objects/PickupPointSearchResult.ds");

var PickupPointSearchResult = integration.pickuppoint.objects.PickupPointSearchResult;
var PickupPoint = integration.pickuppoint.objects.PickupPoint;
var Location = integration.pickuppoint.objects.Location;
var Address = integration.pickuppoint.objects.Address;
var BusinessDay = integration.pickuppoint.objects.BusinessDay;
var BusinessHour = integration.pickuppoint.objects.BusinessHour;

(function() {
    var parseAddress = function(hermesAddress : Object) : Address {
        var address : Address = new Address();
        address.setStreet(hermesAddress.street + " " + hermesAddress.houseNumber);
        address.setPostalCode(hermesAddress.postCode);
        address.setCity(hermesAddress.city);
        return address;
    };
    
    var parseBusinessDay = function(hermesBusinessDay : Object) : BusinessDay {
        var businessDay : BusinessDay = new BusinessDay();
        businessDay.setDayOfWeek(hermesBusinessDay.dayOfWeek);
        
        var businessHour : BusinessHour = new BusinessHour();
        businessHour.setOpenFrom(hermesBusinessDay.openFrom);
        businessHour.setOpenTill(hermesBusinessDay.openTill);
        
        businessDay.addBusinessHour(businessHour);
        
        return businessDay;
    };

    var parsePickupPoint = function(hermesPickupPoint : Object) : PickupPoint {
        var pickupPoint : PickupPoint = new PickupPoint();
        pickupPoint.setId(hermesPickupPoint.externalId);
        pickupPoint.setName(hermesPickupPoint.description);
        pickupPoint.setAddress(parseAddress(hermesPickupPoint.address));
        pickupPoint.setCarrier("Hermes");
        
        for each (let hermesBusinessDay in hermesPickupPoint.businessHours) {
            pickupPoint.addBusinessDay(parseBusinessDay(hermesBusinessDay));
        }
        
        return pickupPoint;
    };
    
    var SearchResultConverter = {
        from : function(responseText : String) : PickupPointSearchResult {
            var response : Object = JSON.parse(responseText);
            
            var searchResult : PickupPointSearchResult = new PickupPointSearchResult();
            searchResult.setSuccess(true);

            for each (let pickupPoint in response) {
                searchResult.addPickupPoint(parsePickupPoint(pickupPoint));
            }
            
            return searchResult;
        }
    };
    
    var NS = Namespace.extendFromString(integration, "pickuppoint");
    Namespace.extend(NS, {
        SearchResultConverter: SearchResultConverter
    });
})();