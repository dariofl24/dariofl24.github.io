importPackage(dw.system);
importPackage(dw.util);
importPackage(dw.rpc);
importPackage(dw.order);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");

importScript( "SigmaSoapServices.ds" );
importScript( "tax/objects/SigmaServiceResponse.ds" );
importScript( "tax/objects/RequestHelpers.ds" );
importScript( "tax/command/GetTaxes.ds" );

(function () {

    var sigmaNS = integration.sigma;
    var sigmaTaxNS = sigmaNS.tax;
    var SigmaTaxSoapService = sigmaNS.SigmaTaxSoapService;
    var RequestHelperFactory = sigmaTaxNS.objects.RequestHelperFactory;
    var SigmaServiceResponse = sigmaTaxNS.objects.SigmaServiceResponse;
    var GetTaxes = sigmaTaxNS.command.GetTaxes;
            
    function calculateTax(shipmentSummary: ShipmentSummary, billingAddressSummary: OrderAddressSummary) {
        if(!customer || !shipmentSummary || !shipmentSummary.getShippingAddress())
            return new SigmaServiceResponse(null, Status.OK);

        var service = new SigmaTaxSoapService();
        var command = new GetTaxes(RequestHelperFactory.getHelper(service.webReference, shipmentSummary, billingAddressSummary));
        var status = service.call(command);
        
        return new SigmaServiceResponse(command.responseObject, status.getStatus());
    }

    Namespace.extend(sigmaTaxNS, {
        SigmaTaxService: {
            calculateTax: calculateTax
        }
    });

})();