importPackage( dw.system );
importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");
importScript("converse_core:common/libInheritance.ds");

importScript("int_builder:BuilderConstants.ds");
importScript("int_builder:profileservice/objects/ProfileServiceResponse.ds");

(function() {
	
    var ProfileServiceResponse = integration.builder.ProfileServiceResponse;
    var CONSTANTS = integration.builder.constants;
    
    var ProfileServiceResponseBuilder = {
        build : function( action : String, authenticated : Boolean ) : ProfileServiceResponse {
            let response;
            
            if( CONSTANTS.Profile.Action.IsLoggedIn == action )
            {
                if( authenticated )
                {
                    response = this.buildIsLoggedInSuccess();
                }
                else
                {
                	response = this.buildIsLoggedInFailure();
                }
            }
            else if( CONSTANTS.Profile.Action.GetProfile == action )
            {
                if( authenticated )
                {
                    response = this.buildGetProfileSuccess();
                }
                else
                {
                    response = this.buildGetProfileFailure();
                }
            }
            else
            {
                response = this.buildUnsupportedOperation();
            }
            
            return response
        },
        
        buildIsLoggedInSuccess: function( ) : ProfileServiceResponse {
            let response = new ProfileServiceResponse();
            response.addStatus( "true" );
            return response;
        },
        
        buildIsLoggedInFailure: function( ) : ProfileServiceResponse {
            let response = new ProfileServiceResponse();
            response.addStatus( "false" );
            response.addException( "User not logged in." );
            return response;
        },
        
        buildGetProfileSuccess: function( ) : ProfileServiceResponse {
            let response = new ProfileServiceResponse();
            response.addStatus( "success" );
            response.addProfile( 4 );
            return response;
        },
        
        buildGetProfileFailure: function( ) : ProfileServiceResponse {
            let response = new ProfileServiceResponse();
            response.addStatus( "error" );
            response.addException( "User not logged in." );
            return response;
        },
        
        buildUnsupportedOperation: function( ) : ProfileServiceResponse {
            let response = new ProfileServiceResponse();
            response.addStatus( "failure" );
            response.addException( "Unsupported operation." );
            return response;
        }
    };
    
    Namespace.extend(integration, {
        builder: {
            utils: {
                ProfileServiceResponseBuilder : ProfileServiceResponseBuilder
            }
        }
    });
})();