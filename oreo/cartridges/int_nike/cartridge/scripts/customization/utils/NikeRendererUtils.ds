importPackage(dw.system);
importPackage(dw.util);
importPackage(dw.web);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");
importScript("converse_webservices:service/ServiceConfigurationFactory.ds");

(function() {

    var INSIDE_BODY_VIEW  = "vw-3";
    var OUTSIDE_BODY_VIEW = "vw-1";
    var TOP_VIEW          = "vw-4";
    var HEEL_STRIPE_VIEW  = "vw-5";

    var getConfiguration = function() {
        return converse.webservices.ServiceConfigurationFactory.getServiceConfiguration('Customization');
    }

    function getImageShotUrl(metricId : String, viewType: String, width: Number) : String {
        let nikeidDomain: String = getConfiguration().nikeidDomain;
        let shotUri: String = "http://{0}/services/imgredirect/fmt-png-alpha/bgc-na/mtr-{1}/wid-{2}/ops-1.9,0.8,0/{3}";

        return StringUtils.format(shotUri, nikeidDomain, metricId, width, viewType);
    }

    var NikeRendererUtils = {
        buildImageUrl : function(imageUrl : String, isSecure : boolean) : String {
            if (isSecure) {
                let configuration = getConfiguration();
                imageUrl = imageUrl.replace(configuration.nikeidRenderUrl, configuration.secureNikeidRenderUrl);
            }

            return imageUrl;
        },
        
        buildFullImageUrlForShareLink : function(metricId : String, width : Number ) : String {
            let configuration = getConfiguration();
            let imageUriPattern = "http://" + configuration.nikeidDomain + configuration.shareLinkImageUri;

            return StringUtils.format(imageUriPattern, metricId, width);
        },

        getBuildImage: function(metricId: String) {
            return {
                url: getImageShotUrl(metricId, OUTSIDE_BODY_VIEW, 240),
                title: Resource.msg('htmlbuilder.reviewpanel.outsidebody', 'product', null),
                alt: ''
            };
        },

        getBuildImageUrl: function(metricId: String, width : Number ) : String {
            return getImageShotUrl(metricId, OUTSIDE_BODY_VIEW, width);
        },

        getReviewImageShots : function(metricId : String) : Collection {
            let shots: Collection = new ArrayList();

            shots.add({
                url: getImageShotUrl(metricId, OUTSIDE_BODY_VIEW, 180),
                title: Resource.msg('htmlbuilder.reviewpanel.outsidebody', 'product', null),
                alt: ''
            });

            shots.add({
                url: getImageShotUrl(metricId, HEEL_STRIPE_VIEW, 180),
                title: Resource.msg('htmlbuilder.reviewpanel.heelstripe', 'product', null),
                alt: ''
            });

            shots.add({
                url: getImageShotUrl(metricId, TOP_VIEW, 180),
                title: Resource.msg('htmlbuilder.reviewpanel.top', 'product', null),
                alt: ''
            });

            shots.add({
                url: getImageShotUrl(metricId, INSIDE_BODY_VIEW, 180),
                title: Resource.msg('htmlbuilder.reviewpanel.insidebody', 'product', null),
                alt: ''
            });

            return shots;
        }

    };

    Namespace.extend(integration, {
        nike: {
            customization: {
                utils: {
                    NikeRendererUtils : NikeRendererUtils
                }
            }
        }
    });
})();