importPackage(dw.system);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");
importScript("converse_webservices:service/command/HttpClientCommand.ds");

importScript("int_nike:customization/objects/GetLockerItemsRequest.ds");
importScript("int_nike:customization/utils/LockerItemsResponseParser.ds");

(function(){
    var GetLockerItemsRequest = integration.nike.customization.GetLockerItemsRequest;
    var LockerItemsResponseParser = integration.nike.customization.utils.LockerItemsResponseParser;
    
    var GetLockerItems = converse.webservices.command.HttpClientCommand.extend({
        init: function(userId : String) {
            this.userId = userId;
            this.logger = Logger.getLogger("CUSTOMIZATION");
        },
        
        createRequest: function () {
            this.requestObject = new GetLockerItemsRequest(this.userId);
            return this.requestObject;
        },
        
        execute: function(request) {
            let url = this.configuration.nikeidDomain + this.configuration.getLockerItemsUri;
            let parameters = request.getParameters(); 
            
            this.logger.info("Fetching locker items for the following userId={0} from Nike", this.userId);

            let response = this.doPost(url, this.encodeParameters(parameters));
            
            this.logger.info("Response got from Nike for userId={0}", this.userId);
            
            return response;
        },
        
        handleResponse: function(response) {
            this._super(response);

            this.responseObject = LockerItemsResponseParser.parse(new XML(response));

            return this.responseObject;
        },

        hasError: function() {
            return this._super() || this.response.indexOf("<locker") == -1;
        }
    });
    
    var ns = Namespace.extendFromString(integration, "nike.customization.command");
    Namespace.extend(ns, { GetLockerItems: GetLockerItems });
})();