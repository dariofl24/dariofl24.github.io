importPackage(dw.system);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");
importScript("converse_webservices:service/command/HttpClientCommand.ds");

importScript("int_nike:customization/objects/BuildsRequest.ds");
importScript("int_nike:customization/objects/NikeBuild.ds");
importScript("int_nike:customization/utils/BuildsResponseParser.ds");

(function(){
    var BuildsRequest = integration.nike.customization.BuildsRequest;
    var BuildsResponseParser = integration.nike.customization.utils.BuildsResponseParser;
    var NikeBuild = integration.nike.customization.NikeBuild;

    var GetBuilds = converse.webservices.command.HttpClientCommand.extend({
        init: function(metricIds : Array) {
            this.metricIds = metricIds;
            this.logger = Logger.getLogger("CUSTOMIZATION");
        },
        
        createRequest: function () {
            this.requestObject = new BuildsRequest(this.metricIds);
            return this.requestObject;
        },
        
        execute: function(request) {
            let url = this.configuration.nikeidDomain + this.configuration.getBuildForCartUri;
            let parameters = request.getParameters(); 
            let metricIdsString = this.metricIds.join(',');

            this.logger.info("Fetching builds for the following metricIds={0} from Nike", metricIdsString);

            let response = this.doPost(url, this.encodeParameters(parameters));
            
            this.logger.info("Response got from Nike for metricIds={0}", metricIdsString);
            
            return response;
        },
        
        handleResponse: function(response) {
            this._super(response);
            this.responseObject = BuildsResponseParser.parse(this.metricIds, new XML(response));
            return this.responseObject;
        },
        
        hasError: function() {
            return this._super() || this.response.indexOf("<results>") == -1;
        }
    });
    
    var ns = Namespace.extendFromString(integration, "nike.customization.command");
    Namespace.extend(ns, { GetBuilds: GetBuilds });
})();