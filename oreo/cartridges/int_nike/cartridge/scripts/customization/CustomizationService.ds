importScript("converse_core:constants.ds");
importScript("converse_core:common/libInheritance.ds");
importScript("converse_core:common/libNamespace.ds");
importScript("converse_webservices:service/AbstractHttpClientService.ds");

importScript("int_nike:customization/command/GetBuilds.ds");
importScript("int_nike:customization/command/GetLockerItems.ds");
importScript("int_nike:customization/command/AddItemToLocker.ds");
importScript("int_nike:customization/command/RemoveItemFromLocker.ds");

importScript("int_nike:customization/objects/AddItemToLockerResponse.ds");

(function(){
    var NIKE = integration.nike.customization;
    var NIKE_CMD = NIKE.command;
    
    var GetBuilds = NIKE_CMD.GetBuilds;
    var GetLockerItems = NIKE_CMD.GetLockerItems;
    var AddItemToLocker = NIKE_CMD.AddItemToLocker;
    var RemoveItemFromLocker = NIKE_CMD.RemoveItemFromLocker;
    
    var NikeBuildsService = converse.webservices.AbstractHttpClientService.extend({
        init : function() {
            this._super('Customization');
        }
    });
    
    var CustomizationService = Class.extend({
        init: function() {
            this.nikeBuildService = new NikeBuildsService();
        },
        
        getBuilds: function(metricIds : Array) : Object {
            let getBuildsCommand = new GetBuilds(metricIds);
            this.nikeBuildService.call(getBuildsCommand);
            
            return { builds: getBuildsCommand.responseObject, success: !getBuildsCommand.hasError() };
        },

        getLockerItems: function(userEmail : String) : Object {
            let getLockerItemsCommand = new GetLockerItems(userEmail);
            this.nikeBuildService.call(getLockerItemsCommand);
            
            return { lockerItems: getLockerItemsCommand.responseObject, success: !getLockerItemsCommand.hasError() };
        },
        
        addItemToLocker: function(userEmail : String, userDefinedName : String, metricId : String, returnUrl : String) : NIKE.AddItemToLockerResponse {
            let addItemToLockerCommand = new AddItemToLocker(userEmail, userDefinedName, metricId, returnUrl);
            this.nikeBuildService.call(addItemToLockerCommand);
            
            return addItemToLockerCommand.responseObject;
        },

        removeItemFromLocker: function(lockerItemId : String) : Object {
            let removeItemFromLockerCommand = new RemoveItemFromLocker(lockerItemId);
            this.nikeBuildService.call(removeItemFromLockerCommand);
            
            return { success: !removeItemFromLockerCommand.hasError() && removeItemFromLockerCommand.responseObject };
        }
    });
    
    Namespace.extend(integration, { 
        nike: {
            customization: {
                CustomizationService: CustomizationService
            }
        }
    });  
})();