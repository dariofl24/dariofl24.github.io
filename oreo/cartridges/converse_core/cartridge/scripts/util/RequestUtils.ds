importPackage( dw.system );
importPackage( dw.util );
importPackage (dw.catalog );

importScript("converse_core:constants.ds");
importScript("converse_core:common/libLang.ds");
importScript("converse_core:common/libNamespace.ds");

(function() {
    let Ajax = converse.constants.Ajax;

    function isAjax(currentRequest) {
        let headers = currentRequest.getHttpHeaders();
        let params = currentRequest.getHttpParameters();
        let result = isAjaxRequest(headers, headerComparator);
        result = result || isAjaxRequest(params, paramComparator);
    
        return result;
    }

    function isAjaxRequest(map, comparator) {
        let result = false;
        
        for (let key in map) {
            let info = comparator(map, key);

            if (info.found) {
                result = info.value;
                break
            }
        }
        
        return result;
    }

    function headerComparator(map, key) {
        let result = {found: false};

        if (key.toLowerCase() === Ajax.Header.Name) {
            let header = map.get(key);
            result.found = true;
            result.value = header != null && header.toLowerCase() === Ajax.Header.Value;
        }

        return result;
    }

    function paramComparator(map, key) {
        let result = {found: false};

        if (key.toLowerCase() === Ajax.Parameter.Name) {
            let param = map.get(key);
            result.found = true;
            result.value = param != null && param.length > 0 && param[0].toLowerCase() === Ajax.Parameter.Value;
        }

        return result;
    }

    Namespace.extend(converse, {
        utils: {
            request : {
               isAjax: isAjax
            }
        }
    });
    
})();
