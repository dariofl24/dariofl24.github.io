importPackage(dw.system);
importPackage(dw.util);
importPackage(dw.svc);
importPackage(dw.ws);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libLang.ds");
importScript("converse_core:common/libNamespace.ds");

(function() {
    function setSecurity(svc : SOAPService) {
        var username = svc.getConfiguration().getCredential().getUser();
        var password = svc.getConfiguration().getCredential().getPassword();
        
        setUsernameAndPassword(svc, username, password, true);
    };
    
    function setUsernameAndPassword(svc : SOAPService, username : String, password : String, securityHeaderInResponse : Boolean) {
        var secrets: Map = new HashMap();
        secrets.put(username, password);

        var requestCfg: Map = new HashMap();
        requestCfg.put(WSUtil.WS_ACTION, WSUtil.WS_USERNAME_TOKEN + " " + WSUtil.WS_TIMESTAMP);
        requestCfg.put(WSUtil.WS_USER, username);
        requestCfg.put(WSUtil.WS_PASSWORD_TYPE, WSUtil.WS_PW_TEXT);
        requestCfg.put(WSUtil.WS_SECRETS_MAP, secrets);

        var responseCfg: Map = new HashMap();
        
        if (securityHeaderInResponse) {
            responseCfg.put(WSUtil.WS_ACTION, WSUtil.WS_TIMESTAMP);
            responseCfg.put(WSUtil.WS_SECRETS_MAP, secrets);
        } else {
            responseCfg.put(WSUtil.WS_ACTION, WSUtil.WS_NO_SECURITY);
        }
        
        WSUtil.setWSSecurityConfig(svc.serviceClient, requestCfg, responseCfg);
    };

    Namespace.extend(converse, {
        webservices: {
            SoapUtils: {
                setSecurity: setSecurity,
                setUsernameAndPassword: setUsernameAndPassword
            }
        } 
    });
})();
