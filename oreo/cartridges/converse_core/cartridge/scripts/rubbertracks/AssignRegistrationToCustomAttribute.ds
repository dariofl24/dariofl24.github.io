/**
*   This script serializes all RubberTracks registration data to JSON and then assigns it to profile.rubberTracksRegistration 
*   custome attribute  
*   @input CurrentCustomer : dw.customer.Customer Current customer.
*   @input CurrentForm : dw.web.Form Current form.
*/

importPackage( dw.system );
importPackage( dw.customer );
importPackage( dw.web );
importPackage( dw.util );

importScript("converse_core:rubbertracks/RubberTracksUtils.ds");

function execute( args : PipelineDictionary ) : Number
{
    let profile = args.CurrentCustomer.profile;
    let formData = collectFormData(args.CurrentForm);
    let currentRegistrationInJson = profile.custom.rubberTracksRegistration;

    profile.custom.rubberTracksRegistration = RubberTracksUtils.saveRegistrationToJson(currentRegistrationInJson, formData);

    return PIPELET_NEXT;
}

function collectFormData(form : Form) : Object
{
    let result = {
        firstName: form.firstname.value,
        lastName: form.lastname.value,
        email: form.email.value,
        phone: form.phone.value,
        city: form.city.value,
        stateUs: form.states.stateCode.value,
        stateNonUs: form.stateNonUS.value,
        countryCode: form.countries.countryCode.value,
        bandName: form.bandname.value,
        bandDescription: form.banddescription.value,
        bandUrls: form.bandurls.value,
        songs: getValueByKey(form.songs.value),
        goals: getValueByKey(form.goals.value),
        stages: getValueByKey(form.stages.value),
        genres: getGenresValue(form.genres.value),
        signupCenter: form.signupcenter.value,
        guitarCenter: form.guitarcenter.value
    }

    return result;
}

function getValueByKey(key : String) : String
{
    return Resource.msg(key, "forms", "");
}

function getGenresValue(key : String) : String
{
    let result = getValueByKey(key);
    
    return empty(result) ? key : result;
}
