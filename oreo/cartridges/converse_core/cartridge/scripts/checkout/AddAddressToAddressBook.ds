/**
 * AddAddressToAddressBook.ds
 *
 * This script attempts to add the given order address to the 
 * address book of the current customer profile.
 * The address attribute "city" is used to generate the address 
 * ID within the address book. 
 *
 * @input Profile : dw.customer.Profile
 * @input OrderAddress : dw.order.OrderAddress
 * @input AddressID : Object
 */
importPackage( dw.customer );
importPackage( dw.order );
importPackage( dw.system );
importPackage( dw.web ); 

importScript("account/Utils.ds");
importScript("converse_core:constants.ds");
importScript("converse_core:util/LocaleInfo.ds");

function execute( pdict : PipelineDictionary ) : Number
{
	let addressBook : AddressBook = pdict.Profile.addressBook;
	let usedAddress : OrderAddress = pdict.OrderAddress;
	var lim = converse.utils.getCustomerStoredAddressesLimit( Site.current );
	
	if(usedAddress == null)
	{
		Logger.debug("Cannot add address to address book, without given order address.");
		return PIPELET_ERROR;
	}
	
	if (addressBook.getAddresses().length == lim) {
		Logger.debug("You cannot have more than {0} addresses in the address book.",lim);
		return PIPELET_ERROR;
	}
	
	// get a unique address ID
	let addressID : String = pdict.AddressID;

	// check on empty address ID
	if(empty(addressID))
	{
		Logger.debug("Cannot add address to address book, with empty address ID.");
		return PIPELET_ERROR;
	}

	let address: CustomerAddress = addressBook.createAddress( addressID );
	address.setFirstName( usedAddress.firstName );
	address.setLastName( usedAddress.lastName );
	address.setAddress1( usedAddress.address1 );
	address.setAddress2( usedAddress.address2 );
	address.setCity( usedAddress.city );
	address.setPostalCode( usedAddress.postalCode );
	address.setStateCode( usedAddress.stateCode );
	address.setCountryCode( usedAddress.countryCode.value );
	
	// update the phone in either the equivalent found address
	// or in the newly created address
	address.setPhone( usedAddress.phone );
	
    return PIPELET_NEXT;
}