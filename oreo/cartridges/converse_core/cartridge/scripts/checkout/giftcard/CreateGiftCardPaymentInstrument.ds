/**
* Creates a gift card payment instrument from the given gift card number and pin
* for the given basket. The script attempts to redeem the current balance of
* the gift card. If the current balance exceeds the order total, this amount
* is redeemed and the balance is lowered.
*
* @input Basket : dw.order.Basket The basket.
* @input Giftcard : Object Gift card with required card number, pin and balance attributes
*
* @output PaymentInstrument : dw.order.PaymentInstrument The created Payment instrument.
* @output Status : dw.system.Status The status of the gift card redemption.
*
*
*/
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.value );
importPackage( dw.util );

importScript("converse_core:constants.ds");
importScript("checkout/giftcard/GiftCardPayment.ds");

var GiftCardPayment = converse.order.GiftCardPayment;

function execute( pdict : PipelineDictionary ) : Number
{
	var basket : Basket = pdict.Basket;
	var giftCard : Object = pdict.Giftcard;
	
	GiftCardPayment.removeDuplicates(basket, giftCard.cardNumber);

	var amountToRedeem : Money = GiftCardPayment.calculateAmountToRedeem(giftCard.getBalanceValue(), basket);
	
	if (amountToRedeem.getValue() <= 0)
	{
		pdict.Status = new Status(Status.ERROR, "giftacrd.error.nothingtoredeem");
		return PIPELET_ERROR;
	}

	var paymentInstr : PaymentInstrument = GiftCardPayment.createGiftCardPaymentInstrument(basket, giftCard, amountToRedeem);
	pdict.PaymentInstrument = paymentInstr;
	
	return PIPELET_NEXT;
}