/**
 * Validates the given gift certificate purchase form and returns a map of form element names to errors.
 *
 * @input Form : dw.web.FormGroup the form to validate 
 * @output FormErrors : dw.util.HashMap map of form element names to errors
 * @output GeneralError : String
 */
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.web );

function execute( pdict : PipelineDictionary ) : Number
{
	// Ensure mandatory parameter 'Form' in pipeline dictionary
	if (pdict.Form == null) {
		return PIPELET_ERROR;
	}
	
	if (pdict.Form.pid.value == null) {
		pdict.GeneralError = "Please select product";
	}
	
	// Extract any error messages from validation
	var formErrors : HashMap = new HashMap();
	for (var i = 0; i < pdict.Form.getChildCount(); i++) {
		var field : FormField = pdict.Form[i];
		if (!field.isValid()) {
			var error = field.getError();
			formErrors.put(field.getHtmlName(), escapeMessage(Resource.msg(error, 'forms', null)));
		}
	}
	
	pdict.FormErrors = formErrors;
	return formErrors.isEmpty() ? PIPELET_NEXT : PIPELET_ERROR;
}

function escapeMessage( value : String ) {
	return value.replace(/'/g, "\\'");
}
