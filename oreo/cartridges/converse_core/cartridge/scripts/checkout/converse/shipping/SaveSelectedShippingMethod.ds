/**
 * @input ShippingMethodID: String
 * @input ProductType: String
 * @input AvailableShippingMethodsGroups: Object
 * @input Basket: dw.order.Basket
 */
importPackage(dw.order);
importPackage(dw.util);
importPackage(dw.system);

function execute(args: PipelineDictionary) : Number
{
	var productType = args.ProductType;
	var shippingMethodID = args.ShippingMethodID;
	var shippingMethodsGroups = args.AvailableShippingMethodsGroups;
	var basket: Basket = args.Basket;
	var targetShipment : Shipment = null;
	
	var shipments : Collection = basket.getShipments();
	for each (var shipment : Shipment in shipments) {
		if (shipment.custom.productType === productType) {
			targetShipment = shipment;
		}
	}
	
	if (targetShipment == null) {
		return PIPELET_ERROR;
	}
	
	var shippingMethods = shippingMethodsGroups.getShippingMethods(productType);
	if (shippingMethods != null) {
		
		for each(var shippingMethod in shippingMethods) {
			
			var method : ShippingMethod = shippingMethod.shippingMethod;
			if (method.getID() === shippingMethodID) {
				targetShipment.setShippingMethod(method);
				return PIPELET_NEXT;
			}
		}
	}
	
   	return PIPELET_ERROR;
}
