importPackage(dw.order);
importPackage(dw.util);

importScript("converse_core:constants.ds");
importScript("converse_core:checkout/converse/shipping/classes/ShippingMethodsComparator.ds");

function ShippingMethodsGroups(self) {
	self = self || {};
	
	var shippingMethodsGroups: HashMap = new HashMap();
	var messages: ArrayList = new ArrayList();
	
	self.getShippingMethods = function(productType: String) {
		var result = new ArrayList();
		
		if (shippingMethodsGroups.containsKey(productType)) {
			result = shippingMethodsGroups.get(productType);
		}
		
		return result; 
	}
	
	self.getDefaultShippingMethod = function(shipment: Shipment) {
		var availableMethods: ArrayList = self.getShippingMethods(shipment.custom.productType);
		var comparator = new ShippingMethodComparator();
		availableMethods.sort(comparator.compare);
		
		if (availableMethods.length !== 0) {
			return availableMethods.get(0);
		}
		
		return null;
	}
	
	self.getProductTypes = function() {
		return shippingMethodsGroups.keySet();
	}
	
	self.add = function(productType: String, shippingMethods: ArrayList) {
		shippingMethodsGroups.put(productType, shippingMethods);
	}
	
	self.size = function() {
		return shippingMethodsGroups.size();
	}
	
	self.getRegularShippingMethods = function() {
		return self.getShippingMethods(converse.constants.ProductType.Regular);
	}
	
	self.getDYOShippingMethods = function() {
		return self.getShippingMethods(converse.constants.ProductType.C1);
	}
	
	self.getPGCShippingMethods = function() {
		return self.getShippingMethods(converse.constants.ProductType.PhysicalGiftCard);
	}
	
	self.getEGCShippingMethods = function() {
		return self.getShippingMethods(converse.constants.ProductType.ElectronicGiftCard);
	}
	
	self.hasAvailableShippinMethod = function(shipment: Shipment) {
		var method = shipment.shippingMethod;
		var availableMethods = self.getShippingMethods(shipment.custom.productType);
		
		if (availableMethods == null) {
			return false;
		}
		
		if (method == null) {
			return false;
		}
		
		for each (var availableMethod in availableMethods) {
			if (availableMethod.shippingMethod.ID === method.ID) {
				return true;
			}
		}
		
		return false;
	}
	
	self.addMessage = function(message: String) {
		if (messages.contains(message)) {
			return;
		}
		
		messages.add(message);
	}
	
	self.hasMessages = function() {
		return messages.length !== 0;
	}
	
	self.getMessages = function() {
		return messages;
	}
	
	return self;
}