importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.order );

importScript("converse_core:constants.ds");
importScript("converse_core:common/libInheritance.ds");
importScript("converse_core:common/libNamespace.ds");
importScript("converse_core:common/HelperFactory.ds");

(function () {
    let AddressHelper = Class.extend({
        addressesAreEqual: function(addressA, addressB) {
            return  addressA.firstName  == addressB.firstName &&
                    addressA.lastName   == addressB.lastName &&
                    addressA.address1   == addressB.address1 &&
                    addressA.address2   == addressB.address2 &&
                    addressA.city       == addressB.city &&
                    addressA.stateCode  == addressB.stateCode &&
                    addressA.postalCode == addressB.postalCode;
        }
    });

    let USAddressHelper = AddressHelper.extend({
        formatAddressForAddressList: function(city : String, postalCode : String, state : String) : String {
            return StringUtils.format("{0}, {1}, {2}", city, state, postalCode);
        },
        
        formatAddressForSummary: function(city : String, postalCode : String, state : String) : String {
            return StringUtils.format("{0}, {1} {2}", city, state, postalCode);
        }
    });
    
    let EMEAddressHelper = AddressHelper.extend({
        formatAddressForAddressList: function(city : String, postalCode : String) : String {
            return this.formatAddressForSummary(city, postalCode);
        },
        
        formatAddressForSummary: function(city : String, postalCode : String) : String {
        	if(postalCode==null){
        		return StringUtils.format("{0}", city);
        	}
            return StringUtils.format("{0}, {1}", city, postalCode);
        }
    });
    
    let AddressHelperFactory = converse.common.HelperFactory.extend({
        initHelpers: function() {
            this.helpers[converse.constants.SiteID.US] = USAddressHelper;
            this.helpers[converse.constants.SiteID.GB] = EMEAddressHelper;
            this.helpers[converse.constants.SiteID.FR] = EMEAddressHelper;
            this.helpers[converse.constants.SiteID.DE] = EMEAddressHelper;
            this.helpers[converse.constants.SiteID.ES] = EMEAddressHelper;
            this.helpers[converse.constants.SiteID.IT] = EMEAddressHelper;
            this.helpers[converse.constants.SiteID.NL] = EMEAddressHelper;
            this.helpers[converse.constants.SiteID.BE] = EMEAddressHelper;
            this.helpers[converse.constants.SiteID.EU] = EMEAddressHelper;
        }
    });

    Namespace.extend(converse, { 
        global: {
            AddressHelperFactory: AddressHelperFactory
        }
    });
})();
