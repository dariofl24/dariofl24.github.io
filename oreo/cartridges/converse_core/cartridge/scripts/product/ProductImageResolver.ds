importPackage(dw.system);
importPackage(dw.customer);
importPackage(dw.catalog);
importPackage(dw.object);
importPackage(dw.util);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libLang.ds");
importScript("converse_core:common/libNamespace.ds");

importScript("converse_core:product/ProductUtils.ds");
importScript("converse_core:product/ProductImageSO.ds");

importScript("int_nike:customization/utils/NikeRendererUtils.ds");

(function(){
    var SleeveAttr = converse.constants.GiftCard.Attributes.sleeve;
    var NikeUtils = integration.nike.customization.utils;

    var LineItemViewType = "lineItemTile";
    var HiResViewType = "hi-res";

    var ProductImageFactory = {
        createProductImage: function(imageObject : Object, viewType: String, index : Number) : Object {
            return new ProductImage(viewType, imageObject, index);
        }
    };

    function getProductUtils() : Object {
        return ProductUtils;
    }

    function getProductImageFactory() : Object {
        return ProductImageFactory;
    }

    function getProductImage(imageObject : Object, viewType: String, index : Number) : Object {
        let result : Object = this.getProductImageFactory().createProductImage(imageObject, viewType, index);
        result.alt = result.getAlt();
        result.title = result.getTitle();

        return result;
    }

    function getGiftCardImageIndex(product : Product, sleeve: String) : Number {
        let index : Number = 0;
        for each(let img in product.getImages(HiResViewType)) {
            if ( img.getAlt() === sleeve ) {
                break;
            }
            index = index + 1;
        }
        return index;
    }

    function getGiftCardImage(product : Product, viewType : String) : Object {
        let sleeve: String = this.getProductUtils().getVariationAttributeValue(product, SleeveAttr);
        let imageIndex: Number = getGiftCardImageIndex(product, sleeve);

        return this.getProductImage(product, viewType, imageIndex);
    }

    function getDyoProductLineItemImage(item : ProductLineItem, isSecure: boolean) : Object {
        return {
            getURL: function() {
                return NikeUtils.NikeRendererUtils.buildImageUrl(item.custom.dyoImageUrl, isSecure);
            },
            alt: item.productName,
            title: item.productName
        };
    };

    function getLockerItemImage(lockerItem: Object, isSecure: boolean) {
        return {
            getURL: function() {
                let url = "";
                if(lockerItem.dyoImageUrl !== "undefined") {
                    return NikeUtils.NikeRendererUtils.buildImageUrl(lockerItem.dyoImageUrl, isSecure);
                }
                return url;
            },
            alt: lockerItem.name,
            title: lockerItem.productName
        };
    };

    function getProductLineItemImage(item : ProductLineItem, viewType : String, isSecure: boolean) : Object {
        if (this.getProductUtils().isConverseOne(item.product))
        {
            return this.getDyoProductLineItemImage(item, isSecure);
        }
        else if (this.getProductUtils().isPhysicalGiftCard(item.product))
        {
            return this.getGiftCardImage(item.product, viewType);
        }
        else 
        {
            return this.getProductImage(item.product, viewType, 0);
        }
    }

    Namespace.extend(converse, { 
        product: {
            ProductImageResolver: {
                getProductUtils: getProductUtils,
                getProductImageFactory: getProductImageFactory,
                getProductImage: getProductImage,
                getDyoProductLineItemImage: getDyoProductLineItemImage,
                getGiftCardImage: getGiftCardImage,
                getProductLineItemImage: getProductLineItemImage,
                getLockerItemImage: getLockerItemImage
            }
        }
    });

})();
