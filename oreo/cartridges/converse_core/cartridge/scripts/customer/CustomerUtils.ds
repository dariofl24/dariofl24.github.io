importPackage(dw.system);
importPackage(dw.customer);
importPackage(dw.object);
importPackage(dw.util);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libLang.ds");
importScript("converse_core:common/libNamespace.ds");

(function(){
    
    function updateCustomerGroupMembership(customer : Customer, customerGroupID : String, include : Boolean) {
        var customerGroup : CustomerGroup = CustomerMgr.getCustomerGroup(customerGroupID);
        
        if (!customerGroup) {
            throw new Error(StringUtils.format("No customer group with id \"{0}\" found", customerGroupID));
        }
        else if (customerGroup.isRuleBased()) {
            throw new Error(StringUtils.format("The customer group with id \"{0}\" is ruled based and can't be used", customerGroupID));
        }
        
        if (include) {
            if (!customer.isMemberOfCustomerGroup(customerGroup)) {
                customerGroup.assignCustomer(customer);
            }
        }
        else {
            if (customer.isMemberOfCustomerGroup(customerGroup)) {
                customerGroup.unassignCustomer(customer);
            }
        }
    }
    
    Namespace.extend(converse, { 
        customer: {
            CustomerUtils: {
                updateCustomerGroupMembership: updateCustomerGroupMembership
            }
        }
    });

})();
