/**
* @input UserEmail : String The email of the user. It will be used as id in the Nike Service locker for storing the user's design.
* @input UserDefinedName : String The name the user entered for the design.
* @input MetricId : String The metric Id of the design.
* @input ReturnUrl : String The Url to return to (usually the PDP of the DYO).
* @output Result : String The response the Nike service provides.
* @output StatusCode : Number The HTTP Status code the Nike service provides.
*/
importPackage( dw.system );

importScript("converse_core:constants.ds");

importScript("int_nike:customization/CustomizationService.ds");
importScript("int_nike:customization/objects/AddItemToLockerResponse.ds");

var CustomizationService = integration.nike.customization.CustomizationService;
var AddItemToLockerResponse = integration.nike.customization.AddItemToLockerResponse;

var logger = Logger.getLogger("CUSTOMIZATION");

function execute( args : PipelineDictionary ) : Number
{
    let userEmail : String = args.UserEmail;
    let userDefinedName : String = args.UserDefinedName;
    let metricId : String = args.MetricId;
    let returnUrl : String = args.ReturnUrl;
    
    let addItemToLockerResponse : AddItemToLockerResponse;
    
    try {
        let customizationService = new CustomizationService();
        addItemToLockerResponse = customizationService.addItemToLocker(userEmail, userDefinedName, metricId, returnUrl);
    } catch(exception) {
        logger.error("An error occured while adding item to locker from Nike for userEmail={0}, userDefinedName={1}, metricsId={2}, returnURL={3} with exception: {4}", 
            userEmail, userDefinedName, metricId, returnUrl, exception);
        
        addItemToLockerResponse = new AddItemToLockerResponse( 500, exception);
    }
    
    args.Result = addItemToLockerResponse.getResponse();
    args.StatusCode = addItemToLockerResponse.getStatusCode();
    
    return PIPELET_NEXT;
}
