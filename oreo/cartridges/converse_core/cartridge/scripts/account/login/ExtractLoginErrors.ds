/**
 * This script gets login form errors.
 *
 * @input Form : dw.web.Form The login form.
 * @input TempCustomer : dw.customer.Customer The temp customer.
 * @output FormErrors : Object The object with form errors. 
 */

importPackage(dw.customer);
importPackage(dw.system);
importPackage(dw.web);

importScript("util/ViewHelpers.ds");

function execute(args : PipelineDictionary) : Number
{
    var form : Form = args.Form;
    var tempCustomer : Customer = args.TempCustomer;
    var messageOverride : String = null;
    
    var formErrors = ViewHelpers.getFormElementsWithError(form);
    
    if (!empty(tempCustomer) && !empty(tempCustomer.profile)) {
        if (tempCustomer.profile.custom.deleted) {
            messageOverride = Resource.msg("login.deleted", "forms", null);
        }
        else if (tempCustomer.profile.custom.legacy) {
            messageOverride = Resource.msg("login.legacyuser", "forms", null);
        }
        else if (tempCustomer.profile.credentials.locked) {
            messageOverride = Resource.msg("login.locked", "forms", null);
        }
        else if (tempCustomer.profile.credentials.remainingLoginAttempts == 1) {
            messageOverride = Resource.msg("login.willbelocked", "forms", null);
        }
        else if (tempCustomer.profile.custom.lastLoginType.value == 1) {
            messageOverride = Resource.msg("login.socialuser", "forms", null);
        }
    }
    else {
        messageOverride = Resource.msg("login.username.notexist-error", "forms", null);
    }
    
    if (!empty(messageOverride)) {
        formErrors.formGroups = {};
        formErrors.errorMessage = messageOverride;
    }
    
    args.FormErrors = formErrors; 

    return PIPELET_NEXT;
}
