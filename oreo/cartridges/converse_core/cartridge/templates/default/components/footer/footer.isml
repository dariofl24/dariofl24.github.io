<iscomment>
    This is the footer for all pages. Don't cache this, because it contains
    user dependent information. Cache its elements instead if necessary (do not forget
    to change the isinclude into a pipeline include for that).
</iscomment>

<isinclude template="util/modules"/>

<isif condition="${typeof showLicensePlates === 'undefined'}">
	<isset name="showLicensePlates" value="${false}" scope="page"/>
</isif>

<isif condition="${empty(pdict.ShouldDisplayFooterNavBar) || pdict.ShouldDisplayFooterNavBar}">
    <isinclude url="${URLUtils.url('Home-IncludeFooterNavigation', 'showLicensePlates', showLicensePlates, 'isCheckout', typeof isCheckout !== 'undefined', 'pipeline', pdict.CurrentRequest.custom.pipeline, 'queryString', pdict.CurrentRequest.httpQueryString)}"/>
</isif>

<isinclude template="components/footer/footer_custom"/>

<iscomment>
    Customer registration can happen everywhere in the page flow. As special tag in the pdict
    is indicating it. So we have to check on every page, if we have to report this event for
    the reporting engine.
</iscomment>
<isinclude template="util/reporting/ReportUserRegistration.isml"/>

<isinclude template="components/footer/footer_UI"/>

<isif condition="${typeof FooterTemplates !== 'undefined'}">
    <isincludemany templates="${FooterTemplates}" />
</isif>
<isscript>
	if(!empty(pdict.ProductSearchResult)){
		var refineByGenderValue = 'no gender';
		var refineByMerchPlannerCategoryValue = null;
		var refineBySubGenderValue = null;
		var refineByCutValue = null;
		var availableRefinements : ArrayList = new ArrayList();
		for each(var refinements in pdict.ProductSearchResult.refinements.allRefinementDefinitions){
			availableRefinements.add(refinements.attributeID);
		}
		if(availableRefinements.contains('gender')){
			var refineValue = pdict.ProductSearchResult.getRefinementValues('gender');
			if(refineValue.size()>0){
				refineByGenderValue = refineValue[0];
			}
		}
		if(availableRefinements.contains('merchPlannerCategory')){
			var refineValue = pdict.ProductSearchResult.getRefinementValues('merchPlannerCategory');
			if(refineValue.size()>0){
				refineByMerchPlannerCategoryValue = refineValue[0];
			}else{
				refineByMerchPlannerCategoryValue = "no merchPlannerCategory";
			}
		}
		if(availableRefinements.contains('subGender')){
			var refineValue = pdict.ProductSearchResult.getRefinementValues('subGender');
			if(refineValue.size()>0){
				refineBySubGenderValue = refineValue[0];
			}else{
				refineBySubGenderValue = "no subGender";
			}
		}
		if(availableRefinements.contains('cut')){
			var refineValue = pdict.ProductSearchResult.getRefinementValues('cut');
			if(refineValue.size()>0){
				refineByCutValue = refineValue[0];
			}else{
				refineByCutValue = "no cut";
			}
		}
	}
</isscript>
<isif condition="${isSite('US') || pdict.CurrentRequest.httpCookies.acceptConverseCookiePolicy != null
					&& pdict.CurrentRequest.httpCookies.acceptConverseCookiePolicy.value != 0
					&&  pdict.CurrentRequest.httpCookies.acceptConverseCookiePolicy.value != 2}">
    <iscomponent 
        pipeline="Tealium-FooterInclude" 
        pid=${empty(pdict.CurrentHttpParameterMap.pid.stringValue) ? null : StringUtils.stringToHtml(pdict.CurrentHttpParameterMap.pid.stringValue)}
        pagecgid=${empty(pdict.CurrentHttpParameterMap.cgid.stringValue) ? null : StringUtils.stringToHtml(pdict.CurrentHttpParameterMap.cgid.stringValue)}
        orderno=${empty(pdict.Order) ? null : pdict.Order.orderNo}
        searchterm=${empty(pdict.CurrentHttpParameterMap.q.stringValue) ? null : StringUtils.stringToHtml(pdict.CurrentHttpParameterMap.q.stringValue)} 
        searchresultscount=${empty(pdict.ProductSearchResult) ? null : pdict.ProductSearchResult.count+''} 
        contentsearchresultscount=${empty(pdict.ContentSearchResult) ? null : pdict.ContentSearchResult.count+''} 
        pagetitle=${empty(pdict.tealiumPageName) ? pdict.CurrentPageMetaData.title : pdict.tealiumPageName}
        pagetype=${pdict.tealiumPageType} 
        isHomepage=${empty(pdict.isHomepage) ? 'false' : pdict.isHomepage}
        pagecontexttype=${('pageContext' in this && !empty(pageContext)) ? pageContext.type+'' : null}
        pagecontexttitle=${('pageContext' in this && !empty(pageContext)) ? pageContext.title+'' : null}
        refinebygendervalue=${refineByGenderValue}
        refinebymerchplannercategoryvalue=${refineByMerchPlannerCategoryValue}
        refinebysubgendervalue=${refineBySubGenderValue}
        refinebycutvalue=${refineByCutValue}
        />

    <script id='pixlee_analytics_script' src="https://assets.pixlee.com/javascripts/embed/pixlee_events.js"></script>
    <script type="text/javascript">
        <isif condition="${isSite('US')}">
        var triggermail=triggermail||[];triggermail.load=function(a){var b=document.createElement("script");b.type="text/javascript";b.async=!0;b.src=("https:"===document.location.protocol?"https://":"http://")+"triggeredmail.appspot.com/triggermail.js/"+a+".js";a=document.getElementsByTagName("script")[0];a.parentNode.insertBefore(b,a)};triggermail.load("converse");window.triggermail=triggermail;
        </isif>
        var pixlee_analytics = new Pixlee_Analytics("zB3xqJat5pGJid9G6HO");
    </script>
</isif>

<isinclude template="components/footer/jsresources"/>