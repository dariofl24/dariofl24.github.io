<iscontent type="text/xml" charset="UTF-8" compact="true"/>

<isscript>
    importPackage(dw.catalog);
    importPackage(dw.value);
    importPackage(dw.util);
    importPackage(dw.system);
    
    importScript("converse_core:product/ProductUtils.ds");
    
    var currency = Site.getCurrent().getDefaultCurrency();
    var country = Locale.getLocale(Site.getCurrent().defaultLocale).getCountry();
    
    var getStyleNumber = function(product : Product) : String {
        return product.manufacturerSKU;
    };
    
    var getAmount = function(product : Product) : String {
        var pricing = ProductUtils.getPricing(product),
            price : Number = pricing.showStandardPrice ? pricing.standard : pricing.sale;
        
        if (Money.NOT_AVAILABLE.value !== price) {
            return StringUtils.formatNumber(price,"#,###.00", "en_US");
        }
        
        return null;
    };
    
    var xml : XML = 
        <GetPricesService>
            <request processingTime="0" status="success"/>
            <response>
                <prices country={country} currency={currency} format="#,###.##"/>
            </response>
        </GetPricesService>;
        
        
    if (!empty(pdict.ProductSearchModel)) {
        let products : Iterator = pdict.ProductSearchModel.products,
            pricesXml : XML = xml.response.prices[0],
            processed : Set = new HashSet();
        
        while (products.hasNext()) {
            let product : Product = products.next();
            
            if (ProductUtils.isConverseOne(product)) {
                let styleNumber : String = getStyleNumber(product),
                    amount : String = getAmount(product);
                
                // Prebuild products can have the same manufacturer SKU but different product IDs. 
                // Nike needs price for only one product in this case and that's why we filter out any duplicates.
                if (!processed.contains(styleNumber) && !empty(amount)) {
                    let priceXml : XML = 
                        <price amount={amount} styleNumber={styleNumber} colorCode="001"/>;
                    
                    pricesXml.appendChild(priceXml);
                    
                    processed.add(styleNumber);
                }
            }
        }
    }
</isscript>

<isprint value="${xml.toXMLString()}" encoding="off"/>
