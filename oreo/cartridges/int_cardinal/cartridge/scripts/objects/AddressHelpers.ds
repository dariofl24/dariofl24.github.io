importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.order );

importScript("converse_core:constants.ds");
importScript("converse_core:common/libInheritance.ds");
importScript("converse_core:common/libNamespace.ds");
importScript("converse_core:common/HelperFactory.ds");
importScript("converse_core:common/libStringUtilsExt.ds");

(function () {
    var generateKeySuffix = function(index: String): String {
        let keySuffix = "";

        if(index) {
            keySuffix = "_" + index;
        }

        return keySuffix;
    };
    
    let AbstractAddressHelper = Class.extend({
        setAddress: function(parameters: dw.util.HashMap, address: OrderAddressSummary, keyPrefix, keySuffix) {
            parameters[StringUtilsExt.decorate("FirstName", keyPrefix, keySuffix)] = address.getFirstName();
            parameters[StringUtilsExt.decorate("LastName", keyPrefix, keySuffix)] = address.getLastName();
            parameters[StringUtilsExt.decorate("Address1", keyPrefix, keySuffix)] = address.getAddress1();
            parameters[StringUtilsExt.decorate("Address2", keyPrefix, keySuffix)] = StringUtilsExt.trim(address.getAddress2());
            parameters[StringUtilsExt.decorate("City", keyPrefix, keySuffix)] = address.getCity();
            parameters[StringUtilsExt.decorate("CountryCode", keyPrefix, keySuffix)] = address.getCountry();
            parameters[StringUtilsExt.decorate("PostalCode", keyPrefix, keySuffix)] = address.getPostalCode();
            parameters[StringUtilsExt.decorate("Phone", keyPrefix, keySuffix)] = address.getPhone();
            this.setLocalizedParameters(parameters, address, keyPrefix, keySuffix);
        },
        setBillingAddress: function(parameters: dw.util.HashMap, address: OrderAddressSummary, index) {
            if(address) {
                this.setAddress(parameters, address, "Billing", generateKeySuffix(index));
            }
        },
        setShippingAddress: function(parameters: dw.util.HashMap, address: OrderAddressSummary, index) {
            this.setAddress(parameters, address, "Shipping", generateKeySuffix(index));
        },
        setLocalizedParameters: function(parameters: dw.util.HashMap, address: OrderAddressSummary, keyPrefix, keySuffix) {
            throw "Please use localized version of 'AbstractAddressHelper'";
        }
    });
    
    let USAdderssHelper = AbstractAddressHelper.extend({
        setLocalizedParameters: function(parameters: dw.util.HashMap, address: OrderAddressSummary, keyPrefix, keySuffix) {
            parameters[StringUtilsExt.decorate("State", keyPrefix, keySuffix)] = address.getState();
        }
    });
    
    let GBAdderssHelper = AbstractAddressHelper.extend({
        setLocalizedParameters: function(parameters: dw.util.HashMap, address: OrderAddressSummary, keyPrefix, keySuffix) {
            parameters[StringUtilsExt.decorate("State", keyPrefix, keySuffix)] = converse.localization['converse-gb']['en_GB']['country']['code'];
        }
    });
    
    let AddressHelperFactory = converse.common.HelperFactory.extend({
        initHelpers: function() {
            this.helpers[converse.constants.SiteID.US] = USAdderssHelper;
            this.helpers[converse.constants.SiteID.GB] = GBAdderssHelper;
        }
    });
    
    Namespace.extend(integration, { 
        cardinal: { 
            objects: {
                AddressHelperFactory: AddressHelperFactory
            }
        }
    });
})();
