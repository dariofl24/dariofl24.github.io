importPackage(dw.system);
importPackage(dw.value);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");

importScript("int_givex:command/AbstractGivexCommand.ds");
importScript("int_givex:objects/Balance.ds");
importScript("int_givex:objects/Giftcard.ds");

(function(){
    
    var GetBalance = integration.givex.command.AbstractGivexCommand.extend({
        
        init: function(giftcard) {
            this._super();
            
            this.giftcard = giftcard;
        },
        
        createRequest: function() {
            var ident = this.createIdentification();
            
            var requestObject = new this.webReference.GetBalance();
            requestObject.id = ident;
            requestObject.givexNumber = this.giftcard.cardNumber;
            requestObject.currency = this.giftcard.currency;
            
            return requestObject;
        },
    
        execute: function(request) {
            this.logger.info("Sending Givex GetBalance request for user \"{0}\"", request.id.user);
            
            var response = this.serviceClient.getBalance(request);
            
            this.logger.info("Received Givex GetBalance response for user \"{0}\": certBalance => {1}, pointsBalance => {2}", request.id.user, response.certBalance, response.pointsBalance);
            
            return response;
        },
        
        handleResponse: function(response) {
            var value = new Number(response.certBalance.toString());
            var balance = new integration.givex.objects.Balance(
                                    new Money(value, this.giftcard.currency),
                                    response.pointsBalance, 
                                    response.expiryDate, 
                                    response.securityCode);
                                    
            this.giftcard.balance = balance;
        },
        
        handleFailure: function(exception) {
            this._super(exception);
            this.giftcard.balance = null;
        }
    });
    
    var ns = Namespace.extendFromString(integration, "givex.command");
    Namespace.extend(ns, { GetBalance: GetBalance });
    
})();



