importPackage(dw.system);
importPackage(dw.util);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");
importScript("converse_webservices:service/command/HttpClientCommand.ds");

(function(){
    
    var AbstractUPSCommand = converse.webservices.command.HttpClientCommand.extend({
        
        init: function(requestObj) {
            this._super();
            this.requestObj = requestObj;
            
            this.logger = Logger.getLogger("UPS");
        },
        
        execute: function(request) {
            var url = this.getServiceUrl();
        
            this.logger.info("Posting UPS request : {0}", request);

            var response = this.doPost(url, request);
            
            this.logger.info("Received UPS response with HTTPCode - {0}: {1}", this.serviceClient.statusCode, response);
            
            return response;
        },
        
        setContentType: function() {
            this.serviceClient.setRequestHeader("Content-Type", "text/xml");
        },
        
        getServiceUrl: function() {
            throw new Error("Missing method 'getServiceUrl'.");
        },
        
        createAccessRequestXML: function() : XML {
            var accessLicenseNumber : String = this.configuration.AccessLicenseNumber;
            var userID : String = this.configuration.UserID;
            var password : String = this.configuration.Password;
            
            var accessRequestXml : XML =
                <AccessRequest xml:lang="en-US">
                    <AccessLicenseNumber>{accessLicenseNumber}</AccessLicenseNumber>
                    <UserId>{userID}</UserId>
                    <Password>{password}</Password>
                </AccessRequest>;
                
            return accessRequestXml;
        }
    });
    
    var ns = Namespace.extendFromString(integration, "ups.command");
    Namespace.extend(ns, { AbstractUPSCommand: AbstractUPSCommand });
    
})();
