importPackage(dw.system);
importPackage(dw.util);
importPackage(dw.object);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");

(function(){
    
    var ServiceConfigurationFactory = {
        getServiceConfiguration : function(serviceName) {
            
            var servicePreferences:HashMap = new HashMap();
            
            var regExp:RegExp = new RegExp("^" + serviceName + "\.+?", "gi");
            
            var allPreferences = this.getAllSitePreferences();
                       
            for (preferenceName in allPreferences) {
                var key = preferenceName;
                var value = allPreferences[preferenceName];
                
                if (regExp.test(key)) {
                    servicePreferences.put(this.removePrefix(key, regExp), value);
                }
            }
            
            if (servicePreferences.size() == 0) {
                throw new Error("Configuration for service '" + serviceName + "' does not exist!");
            }
            
            return servicePreferences;
        },
        
        getAllSitePreferences : function() {
            return Site.getCurrent().getPreferences().getCustom();  
        },
        
        removePrefix : function(key, regExp) {
            return key.replace(regExp, "");
        }
    };
    
    Namespace.extend(converse, { 
        webservices: {
            ServiceConfigurationFactory: ServiceConfigurationFactory
        }
    });
    
})();