importPackage(dw.system);
importPackage(dw.util);
importPackage(dw.object);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");

(function(){
    
    function ServiceConfiguration(serviceName : String) {
        this.serviceName = serviceName;
        
        var customObject = CustomObjectMgr.getCustomObject('ServiceConfigurationInstance', this.serviceName);
        if (empty(customObject)) {
            throw new Error("Configuration for service '" + this.serviceName + "' does not exist!");
        }
        
        // copy static configuration properties
        for (var propertyKey in customObject.custom) {
            if (typeof this[propertyKey] === 'undefined') {
                this[propertyKey] = customObject.custom[propertyKey];
            }
        }
        
        // parse ans store any additonal properties in JSON format
        this.parameters = empty(this.parameterValues) ? {} : JSON.parse(this.parameterValues);
    }
    
    ServiceConfiguration.prototype = {        
        provideDisplayName: function() {
            // calculate nice display name
            var displayName = this.serviceName.replace(/([A-Z])([a-z])/g, " $1$2");
            displayName = displayName.replace(/([a-z])([A-Z])/g, "$1 $2");
            displayName = displayName.substr(0,1).toUpperCase() + displayName.substr(1);
            return displayName;
        }
    }
    
    Namespace.extend(converse, { 
        webservices: {
            ServiceConfiguration: ServiceConfiguration
        }
    });
    
})();