importPackage(dw.system);

importScript("converse_core:constants.ds");
importScript("converse_core:common/libNamespace.ds");
importScript("service/AbstractService.ds");

(function(){
    
    var AbstractSoapService = converse.webservices.AbstractService.extend({
        
        initServiceClient: function() {
            this.webReference = this.getWebReference();
                        
            return this.webReference.getDefaultService();
        },
        
        getWebReference: function() {
            throw new Error("The service " + this.serviceName + " does not implement the required method 'getWebReference'.");
        },
        
        setup: function() {
            this._super();
        
            var serviceUrl = this.configuration.url;
            if (!empty(serviceUrl)) {
                this.setServiceUrl(serviceUrl);
            }
        },
        
        setCredentials: function(username, password) {
            this.serviceClient.setUsername(username);
            this.serviceClient.setPassword(password);
        },
        
        setTimeout: function(timeout) {
            this.serviceClient.setTimeout(timeout);
        },
        
        setServiceUrl: function(serviceUrl) {
            this.serviceClient._setProperty(dw.rpc.Stub.ENDPOINT_ADDRESS_PROPERTY, serviceUrl);
        },
        
        getCommandOptions: function() {
            var options = this._super();            
            options.webReference = this.webReference;            
            return options;
        }
    });
    
    Namespace.extend(converse, { 
        webservices: {
            AbstractSoapService: AbstractSoapService
        }
    });
    
})();
